// stdafx.h : 標準のシステム インクルード ファイルのインクルード ファイル、または
// 参照回数が多く、かつあまり変更されない、プロジェクト専用のインクルード ファイル
// を記述します。
//

#pragma once


#define NOMINMAX		// minwindef.hに記述されているmin/maxマクロを使わない。※std::max/min を邪魔しないように

#ifndef VC_EXTRALEAN
#define VC_EXTRALEAN            // Windows ヘッダーから使用されていない部分を除外します。
#endif

#include "targetver.h"


#define _ATL_CSTRING_EXPLICIT_CONSTRUCTORS      // 一部の CString コンストラクターは明示的です。


#include <afxwin.h>         // MFC のコアおよび標準コンポーネント
#include <afxext.h>         // MFC の拡張部分

//#ifndef _AFX_NO_OLE_SUPPORT
//#include <afxole.h>         // MFC OLE クラス
//#include <afxodlgs.h>       // MFC OLE ダイアログ クラス
//#include <afxdisp.h>        // MFC オートメーション クラス
//#endif // _AFX_NO_OLE_SUPPORT
//
//#ifndef _AFX_NO_DB_SUPPORT
//#include <afxdb.h>                      // MFC ODBC データベース クラス
//#endif // _AFX_NO_DB_SUPPORT
//
//#ifndef _AFX_NO_DAO_SUPPORT
//#include <afxdao.h>                     // MFC DAO データベース クラス
//#endif // _AFX_NO_DAO_SUPPORT
//
//#ifndef _AFX_NO_OLE_SUPPORT
//#include <afxdtctl.h>           // MFC の Internet Explorer 4 コモン コントロール サポート
//#endif
//#ifndef _AFX_NO_AFXCMN_SUPPORT
//#include <afxcmn.h>                     // MFC の Windows コモン コントロール サポート
//#endif // _AFX_NO_AFXCMN_SUPPORT




// CppUnitTest のヘッダー
#include "CppUnitTest.h"



// TODO: プログラムに必要な追加ヘッダーをここで参照してください

#include <iostream>
#include <string>
#include <array>
#include <vector>
#include <numeric>
#include <algorithm>
#include <filesystem>
#include <cmath>
#include <chrono>
#include <ctime>

#include <boost/algorithm/clamp.hpp>
#include <boost/range/numeric.hpp>
#include <boost/range/algorithm/find.hpp>
#include <boost/range/algorithm_ext/iota.hpp>
#include <boost/filesystem.hpp>
//#include <boost/timer/timer.hpp>	// 使えなかった ※WEBから落としてきたバイナリーだったからかも

#if defined(UNICODE) || defined(_UNICODE)
# define tout std::wcout
# define tin std::wcin
# define terr std::wcerr
# define tlog std::wclog
#else
# define tout std::cout
# define tin std::cin
# define terr std::cerr
# define tlog std::clog
#endif

//typedef std::basic_string<_TCHAR> tstring
//typedef std::basic_stringstream<_TCHAR> tstringstream;
//typedef std::basic_ostringstream<_TCHAR> tostringstream;
//typedef std::basic_istringstream<_TCHAR> tistringstream;

using tstring = std::basic_string<_TCHAR>;
using tstringstream = std::basic_stringstream<_TCHAR>;
using tostringstream = std::basic_ostringstream<_TCHAR>;
using tistringstream = std::basic_istringstream<_TCHAR>;
